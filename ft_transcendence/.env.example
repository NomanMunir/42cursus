# ft_transcendence Environment Configuration
# Copy this file to .env and update the values according to your setup

# =============================================================================
# GENERAL SETTINGS
# =============================================================================

# Python settings
PYTHONUNBUFFERED=1
PYTHONDONTWRITEBYTECODE=1

# Data upload limits
DATA_UPLOAD_MAX_MEMORY_SIZE=1048576  # Set limit to 1 MB (1 MB = 1024 * 1024 bytes)

# =============================================================================
# MAIN DATABASE (PostgreSQL) - User Management Service
# =============================================================================

POSTGRES_DB=your_main_database_name
POSTGRES_USER=your_db_username
POSTGRES_PASSWORD=your_secure_db_password

# Database URL for web service
DATABASE_URL_WEB=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

# =============================================================================
# TOURNAMENT DATABASE (PostgreSQL) - Tournament Service
# =============================================================================

TOURNAMENT_DB=tournament_database_name
TOURNAMENT_DB_USER=tournament_db_username
TOURNAMENT_DB_PASSWORD=tournament_secure_password

# Database URL for tournament service
DATABASE_URL=postgres://${TOURNAMENT_DB_USER}:${TOURNAMENT_DB_PASSWORD}@tournaments_db:5432/${TOURNAMENT_DB}

# =============================================================================
# DJANGO SECRET KEYS
# =============================================================================

# Main backend service secret key
# Generate with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
SECRET_KEY=your-main-django-secret-key-here

# Tournament service secret key
# Generate with: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
TOURNAMENT_SECRET_KEY=your-tournament-django-secret-key-here

# =============================================================================
# 42 OAUTH INTEGRATION
# =============================================================================

# 42 API credentials - Get these from https://profile.intra.42.fr/oauth/applications
CLIENT_ID=your-42-oauth-client-id
CLIENT_SECRET=your-42-oauth-client-secret
REDIRECT_URI=https://127.0.0.1:3500/api/auth/42/redirect/

# =============================================================================
# SERVICE COMMUNICATION
# =============================================================================

# Tournament service URL for internal communication
TOURNAMENT_SERVICE_URL=http://tournaments:8002

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Debug mode (set to 0 for production)
DEBUG=1

# Allowed hosts (comma-separated list)
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# CORS settings for frontend communication
CORS_ALLOWED_ORIGINS=https://localhost:3500,https://127.0.0.1:3500

# =============================================================================
# SSL/TLS CERTIFICATES (Optional)
# =============================================================================

# SSL certificate paths (if using custom certificates)
SSL_CERT_PATH=/app/certificates/server.crt
SSL_KEY_PATH=/app/certificates/server.key

# =============================================================================
# EXAMPLE VALUES (for reference)
# =============================================================================

# Example database configuration:
# POSTGRES_DB=ft_transcendence_db
# POSTGRES_USER=transcendence_user
# POSTGRES_PASSWORD=secure_password_123

# TOURNAMENT_DB=tournament_db
# TOURNAMENT_DB_USER=tournament_user
# TOURNAMENT_DB_PASSWORD=tournament_secure_pass

# Example secret keys (DO NOT USE THESE IN PRODUCTION):
# SECRET_KEY=django-insecure-example-key-change-this-in-production
# TOURNAMENT_SECRET_KEY=django-insecure-tournament-example-key-change-this

# Example 42 OAuth (replace with your actual credentials):
# CLIENT_ID=u-s4t2ud-your-actual-client-id-here
# CLIENT_SECRET=s-s4t2ud-your-actual-client-secret-here

# =============================================================================
# SECURITY NOTES
# =============================================================================

# 1. Never commit the actual .env file to version control
# 2. Use strong, unique passwords for database credentials
# 3. Generate new Django secret keys for each environment
# 4. Keep your 42 OAuth credentials secure
# 5. For production, use environment-specific values
# 6. Consider using Docker secrets for sensitive data in production

# =============================================================================
# QUICK SETUP COMMANDS
# =============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Edit the .env file with your actual values
# 3. Generate Django secret keys:
#    python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
# 4. Get 42 OAuth credentials from: https://profile.intra.42.fr/oauth/applications
# 5. Run the project: make up
